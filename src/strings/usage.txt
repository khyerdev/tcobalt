The tcobalt cli utility downloads videos from the internet straight from your terminal.
This is just a wrapper around "cobalt.tools" made by wukko. I am not affiliated with wukko in any way.
Usage: tcb <method> <required args> [optional args]

Main Methods:
	get <url> [options]
	list
	help [method]
	bulk <action> <args>
Misc Methods:
	gen-config
	version
	cobalt-version [instance]

You can also type the first letter for a method
Type "help <method>" for more information about a method and its options
Type "help examples" for some examples, or "help config" for... config help
Run with TCOBALT_DEBUG=1 to be verbose about the process

[get]
tcobalt "get" method syntax
Easy downloading for videos/songs with simple syntax
Usage: tcb get <url> [options]

Global Options:
	-q --vquality <quality>    The quality of the output video. Options: 144, 480, 720, 1080, 1440, 2160, Default: 1080
	-f --aformat <format>      The format of the audio. Formats: best, mp3, ogg, wav, opus, Default: mp3
				   The "best" option takes the format of the original audio, and may not be specified on the website you took the media from.
	-b --bitrate <bitrate>	   The bitrate of the audio if it was reformatted. Rates: 320, 256, 128, 96, 64, 8, Default: 128
	-a --audio-only            Tells cobalt to only download and output the audio of the link
	-m --mute-audio            Tells cobalt to mute the audio from the downloaded content
	-= --auto		   Tells cobalt to download a video if possible, otherwise downloading audio instead.
				   This is the default option, only use this if your config default is something else.
	-n --no-metadata	   Prevents the downloaded media from including metadata
	-s --fname-style <style>   Tells cobalt which filename style to return. Styles: classic, pretty, basic, nerdy, Default: classic
				   This option will not matter if -o or --output is specified
	-o --output <filename>     The output filename. Make sure to include the proper file extension
				   If no filename is specified, it uses the internal filename of the video, or the hash of the url if none is available
	-i --instance <url | idx>  Sends the requests to this cobalt instance instead of the default 'co.wuk.sh' or the default specified in the config file
				   You can specify a number n instead, and it will take the nth line in the [default.instances] section of the config file

Service-Specific Options:
	-c --vcodec <codec>        The codec of the output [YOUTUBE] video. Codecs: h264, av1, vp9, Default: h264
				   h264 and av1 are for .mp4 files, vp9 is for .webm files.
	-l --dublang <lang>	   Tells cobalt to attempt downloading the [YOUTUBE] video with audio tracks in the given IETF language tag based off ISO 639-1
				   IETF language tags have a specific format. Some examples are: en, es, ja, en-US, fr-CA, and zh-Hans. The default is 'en' (English)
				   More about IETF language tags here: https://www.w3.org/International/articles/language-tags/
	-g --twitter-gif           Tells cobalt to download the given [TWITTER] content as a gif
	-u --tt-full-audio	   Tells cobalt to download the [TIKTOK] audio without modifications from its post author
	-h --tt-h265		   Suggests cobalt to try downloading the [TIKTOK] video with the h265 codec

Add a + as an argument if you want text piped in through `command | tcb get` to be used as the url
Passing a boolean argument when the default config for it is set to "true" will reset it back to "false"

[list]
tcobalt "list" method syntax
All this method does is print all supported services and exits
Usage: tcb list

[bulk]
tcobalt "bulk" method syntax
Downloads multiple videos/audios at once
Usage: tcb bulk <action> <required args> [optional args]

Actions:
	get <url list> [options]
		- URL list is, you guessed it, a list of URLs, separated by spaces, but not inside quotes
		- Uses the same options as `tcb get`
		- Output filename will be used for each file, with a number prepended to the name for each downloaded file
		- Options apply for all links. Use `tcb execute` to use different options per link
	execute <filename>
		- Runs `tcb get` commands from a file, separated by lines
		- Syntax is the same as command-line tcobalt, just without `tcb get` each line

Remember, the cobalt rate limit is 25 every 60 seconds. Refrain from making a bulk request with more than 25 URLs.

[version]
tcobalt command line utility {}
Copyright (c) 2024 Khyernet
This is free software, distributed under the GNU GPL v3.
You may also use, modify, and distribute this software under the same license.
The code and license is available at https://github.com/khyerdev/tcobalt

[supported]
bilibili.com & bilibili.tv
dailymotion videos
instagram reels, posts & stories
ok video (full video+audio only)
pinterest videos & stories
reddit videos & gifs
rutube videos
soundcloud (audio only)
streamable.com
tiktok videos, photos & audio
tumblr video & audio
twitch clips
twitter videos & voice
vimeo
vine archive
vk video & clips (full video+audio only)
youtube videos, shorts & music

[examples]
tcobalt command examples:
tcb get https://www.youtube.com/watch?v=zn5sTDXSp8E -m
tcb get --vquality 1440 https://www.youtube.com/watch?v=zn5sTDXSp8E
tcb g -c av1 https://www.youtube.com/watch?v=zn5sTDXSp8E -o rice.mp4
tcb g -mqof 480 rice.webm vp9 https://www.youtube.com/watch?v=zn5sTDXSp8E
tcb bulk get https://www.youtube.com/watch?v=zn5sTDXSp8E https://www.youtube.com/watch?v=OnrbdAAokS0 -qo 720 video.mp4
tcb bulk execute video-list.txt
tcb b exe /etc/public-videos.tcb
tcb b e evil

"bulk execute" file example:
---
https://www.youtube.com/watch?v=OnrbdAAokS0 -o 1.mp4
https://www.youtube.com/watch?v=zn5sTDXSp8E -mo 2.mp4
---

[gen-config]
tcobalt "gen-config" method syntax
Generates a default configuration file, or overwrites the existing one with the default
Usage: tcb gen-config

[config]
The tcobalt file contains defaults for the command-line arguments.
It is located at ~/.config/tcobalt.conf on unix machines and %LOCALAPPDATA%/tcobalt.conf on Windows
The [default] section contains the default command line args
The [default.instances] section contains a list of instances you can easily call numerically with the -i flag in "tcb get"
Generate or overwrite your config file with "tcb gen-config"
